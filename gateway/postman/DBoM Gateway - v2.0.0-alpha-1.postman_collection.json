{
	"info": {
		"_postman_id": "903fc889-195f-4ecb-8c52-b28d74612d51",
		"name": "DBoM Gateway - v2.0.0-alpha-1",
		"description": "The HTTP REST API for the Digital Bill of Materials 2.x Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28713797",
		"_collection_link": "https://grey-equinox-369269.postman.co/workspace/DBoM-V2~075b9ece-b663-4f88-808b-6acd86a325ff/collection/28713797-903fc889-195f-4ecb-8c52-b28d74612d51?action=share&source=collection_link&creator=28713797"
	},
	"item": [
		{
			"name": "Nodes",
			"item": [
				{
					"name": "Get Node Metadata",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/_metadata",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"_metadata"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com"
								}
							]
						},
						"description": "List all notaries that are configured locally"
					},
					"response": [
						{
							"name": "Get Node Metadata",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/_metadata",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"_metadata"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 20:48:23 GMT"
								},
								{
									"key": "Content-Length",
									"value": "328"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"id\": \"64f8e1b7fc555f4c0d65e25f\",\n            \"nodeId\": \"node1\",\n            \"publicKeys\": [],\n            \"nodeConnections\": [\n                {\n                    \"nodeId\": \"node2\",\n                    \"status\": \"FEDERATION_SUCCESS\",\n                    \"channelConnections\": [\n                        {\n                            \"channelId\": \"channel1\",\n                            \"status\": \"CONNECTED\",\n                            \"access\": \"READ\"\n                        }\n                    ]\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:31:51.137Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:37.706Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Node1",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/_metadata",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"_metadata"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com"
								}
							]
						},
						"description": "List all notaries that are configured locally"
					},
					"response": [
						{
							"name": "Node1",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/_metadata",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"_metadata"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 20:48:28 GMT"
								},
								{
									"key": "Content-Length",
									"value": "328"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"id\": \"64f8e1b7fc555f4c0d65e25f\",\n            \"nodeId\": \"node1\",\n            \"publicKeys\": [],\n            \"nodeConnections\": [\n                {\n                    \"nodeId\": \"node2\",\n                    \"status\": \"FEDERATION_SUCCESS\",\n                    \"channelConnections\": [\n                        {\n                            \"channelId\": \"channel1\",\n                            \"status\": \"CONNECTED\",\n                            \"access\": \"READ\"\n                        }\n                    ]\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:31:51.137Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:37.706Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Node2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node2Url}}/nodes/:node_uri/_metadata",
							"host": [
								"{{node2Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"_metadata"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node2.test.com"
								}
							]
						},
						"description": "List all notaries that are configured locally"
					},
					"response": [
						{
							"name": "Node2",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node2Url}}/nodes/:node_uri/_metadata",
									"host": [
										"{{node2Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"_metadata"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node2.test.com1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 20:48:33 GMT"
								},
								{
									"key": "Content-Length",
									"value": "335"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"id\": \"64f8e1b7e38860350a2cd267\",\n            \"nodeId\": \"node2\",\n            \"publicKeys\": [],\n            \"nodeConnections\": [\n                {\n                    \"nodeId\": \"node1\",\n                    \"status\": \"FEDERATION_SUCCESS\",\n                    \"channelConnections\": [\n                        {\n                            \"channelId\": \"channel1\",\n                            \"status\": \"REQUEST_ACCEPTED\",\n                            \"access\": \"READ\"\n                        }\n                    ]\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:31:51.906Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:37.606Z\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Channel",
			"item": [
				{
					"name": "Create a channel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"channelId\": \"channel3\",\n    \"description\": \"Channel3 of Node 1 - Remote\",\n    \"type\": \"TEST_CHANNEL\",\n    \"notaries\": []\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Error to Create a channel",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channelId\": \"channel1\",\n    \"description\": \"Channel1 of Node 2 - Remote\",\n    \"type\": \"TEST_CHANNEL\",\n    \"notaries\": [\n        {\n            \"id\": \"ahgsduih\",\n            \"type\": \"SIGNED\",\n            \"config\": {}\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 20:49:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "80"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"status\": \"invalid request\",\n    \"error\": \"failed to create channel\"\n}"
						},
						{
							"name": "Create a channel",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"channelId\": \"channel3\",\n    \"description\": \"Channel3 of Node 1 - Remote\",\n    \"type\": \"TEST_CHANNEL\",\n    \"notaries\": [\n        {\n            \"id\": \"ahgsduih\",\n            \"type\": \"SIGNED\",\n            \"config\": {}\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 18:44:47 GMT"
								},
								{
									"key": "Content-Length",
									"value": "57"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully created channel\"\n}"
						}
					]
				},
				{
					"name": "Add a notary to a channel",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"notaryId\": \"notary-sample\",\n  \"notaryMeta\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/notary",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"notary"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1"
								}
							]
						}
					},
					"response": [
						{
							"name": "Error Add a notary to a channel",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"notaryId\": \"notary-sample-1\",\n  \"notaryMeta\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/notary",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"notary"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel10"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 10:45:39 GMT"
								},
								{
									"key": "Content-Length",
									"value": "78"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"status\": \"invalid request\",\n    \"error\": \"channel does not exist\"\n}"
						},
						{
							"name": "Add a notary to a channel",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"notaryId\": \"notary-sample\",\n  \"notaryMeta\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/notary",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"notary"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 17:46:25 GMT"
								},
								{
									"key": "Content-Length",
									"value": "64"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully updated channel notary\"\n}"
						}
					]
				},
				{
					"name": "Remove a notary from a channel",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/notary/:notary_id",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"notary",
								":notary_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "notary_id",
									"value": "notary-sample",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove a notary from a channel",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/notary/:notary_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"notary",
										":notary_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "notary_id",
											"value": "notary-sample",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 10:47:00 GMT"
								},
								{
									"key": "Content-Length",
									"value": "64"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully removed channel notary\"\n}"
						}
					]
				},
				{
					"name": "List Channels by Channel ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node2.test.com"
								},
								{
									"key": "channel_id",
									"value": "channel12"
								}
							]
						},
						"description": "List all channels configured on a node"
					},
					"response": [
						{
							"name": "List Channels by Channel ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node2Url}}/nodes/:node_uri/channels/:channel_id",
									"host": [
										"{{node2Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node2.test.com"
										},
										{
											"key": "channel_id",
											"value": "channel1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 21:05:48 GMT"
								},
								{
									"key": "Content-Length",
									"value": "257"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"description\": \"Channel1 of Node 2 - Remote\",\n            \"type\": \"TEST_CHANNEL\",\n            \"notaries\": [\n                {\n                    \"id\": \"ahgsduih\",\n                    \"type\": \"SIGNED\",\n                    \"config\": {}\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:32:10.669Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:10.669Z\"\n        }\n    ]\n}"
						},
						{
							"name": "List Channels by Channel ID",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com"
										},
										{
											"key": "channel_id",
											"value": "channel1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 21:08:06 GMT"
								},
								{
									"key": "Content-Length",
									"value": "257"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"description\": \"Channel1 of Node 1 - Remote\",\n            \"type\": \"TEST_CHANNEL\",\n            \"notaries\": [\n                {\n                    \"id\": \"ahgsduih\",\n                    \"type\": \"SIGNED\",\n                    \"config\": {}\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:32:10.082Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:10.082Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "List Channels",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com"
								}
							]
						},
						"description": "List all channels configured on a node"
					},
					"response": [
						{
							"name": "List Channels",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Wed, 06 Sep 2023 21:05:37 GMT"
								},
								{
									"key": "Content-Length",
									"value": "486"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"description\": \"Channel1 of Node 1 - Remote\",\n            \"type\": \"TEST_CHANNEL\",\n            \"notaries\": [\n                {\n                    \"id\": \"ahgsduih\",\n                    \"type\": \"SIGNED\",\n                    \"config\": {}\n                }\n            ],\n            \"createdAt\": \"2023-09-06T20:32:10.082Z\",\n            \"modifiedAt\": \"2023-09-06T20:32:10.082Z\"\n        },\n        {\n            \"channelId\": \"channel3\",\n            \"description\": \"Channel3 of Node 1 - Remote\",\n            \"type\": \"TEST_CHANNEL\",\n            \"notaries\": [\n                {\n                    \"id\": \"ahgsduih\",\n                    \"type\": \"SIGNED\",\n                    \"config\": {}\n                }\n            ],\n            \"createdAt\": \"2023-09-06T21:05:26.480Z\",\n            \"modifiedAt\": \"2023-09-06T21:05:26.480Z\"\n        }\n    ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "Asset",
			"item": [
				{
					"name": "Add An Asset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"standardVersion\": 1,\r\n    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\r\n    \"createdAt\": \"2023-05-15T12:34:56Z\",\r\n    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\r\n    \"notarizations\": [\r\n        {\r\n            \"notaryId\": \"not1\",\r\n            \"notaryMeta\": {}\r\n        }\r\n    ],\r\n    \"links\": [\r\n        {\r\n            \"assetUri\": \"string\",\r\n            \"type\": \"asset\",\r\n            \"comment\": \"example2\",\r\n            \"id\": \"link1\"\r\n        }\r\n    ],\r\n    \"signatures\": [\r\n        {\r\n            \"hashType\": \"SHA256\",\r\n            \"signType\": \"type1\",\r\n            \"signMeta\": {\r\n                \"authority\": \"user1\",\r\n                \"keyId\": \"12345\",\r\n                \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\r\n            }\r\n        }\r\n    ],\r\n    \"body\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset3",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Add An Asset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"standardVersion\": 1,\r\n    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\r\n    \"createdAt\": \"2023-05-15T12:34:56Z\",\r\n    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\r\n    \"notarizations\": [\r\n        {\r\n            \"notaryId\": \"not1\",\r\n            \"notaryMeta\": {}\r\n        }\r\n    ],\r\n    \"links\": [\r\n        {\r\n            \"assetUri\": \"string\",\r\n            \"type\": \"asset\",\r\n            \"comment\": \"example2\",\r\n            \"id\": \"link1\"\r\n        }\r\n    ],\r\n    \"signatures\": [\r\n        {\r\n            \"hashType\": \"SHA256\",\r\n            \"signType\": \"type1\",\r\n            \"signMeta\": {\r\n                \"authority\": \"user1\",\r\n                \"keyId\": \"12345\",\r\n                \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\r\n            }\r\n        }\r\n    ],\r\n    \"body\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset3",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:40:40 GMT"
								},
								{
									"key": "Content-Length",
									"value": "55"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully created asset\"\n}"
						},
						{
							"name": "Error Add An Asset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"standardVersion\": 1,\r\n    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\r\n    \"createdAt\": \"2023-05-15T12:34:56Z\",\r\n    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\r\n    \"notarizations\": [\r\n        {\r\n            \"notaryId\": \"not1\",\r\n            \"notaryMeta\": {}\r\n        }\r\n    ],\r\n    \"links\": [\r\n        {\r\n            \"assetUri\": \"string\",\r\n            \"type\": \"asset\",\r\n            \"comment\": \"example2\",\r\n            \"id\": \"link1\"\r\n        }\r\n    ],\r\n    \"signatures\": [\r\n        {\r\n            \"hashType\": \"SHA256\",\r\n            \"signType\": \"type1\",\r\n            \"signMeta\": {\r\n                \"authority\": \"user1\",\r\n                \"keyId\": \"12345\",\r\n                \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\r\n            }\r\n        }\r\n    ],\r\n    \"body\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset3",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:40:48 GMT"
								},
								{
									"key": "Content-Length",
									"value": "78"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"status\": \"invalid request\",\n    \"error\": \"failed to create asset\"\n}"
						}
					]
				},
				{
					"name": "List Assets",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1"
								}
							]
						},
						"description": "List all assets"
					},
					"response": [
						{
							"name": "List Assets",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:47:22 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1136"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"payload\": {\n                \"standardVersion\": 1,\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"type\": \"asset\",\n                        \"comment\": \"example2\",\n                        \"id\": \"link1\"\n                    }\n                ],\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signType\": \"type1\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\n                        }\n                    }\n                ],\n                \"body\": {}\n            }\n        },\n        {\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset3\",\n            \"payload\": {\n                \"standardVersion\": 1,\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"type\": \"asset\",\n                        \"comment\": \"example2\",\n                        \"id\": \"link1\"\n                    }\n                ],\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signType\": \"type1\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\n                        }\n                    }\n                ],\n                \"body\": {}\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Retrieve an Asset",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								}
							]
						},
						"description": "Get an asset"
					},
					"response": [
						{
							"name": "Retrieve an Asset",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:47:53 GMT"
								},
								{
									"key": "Content-Length",
									"value": "582"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"payload\": {\n                \"standardVersion\": 1,\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"type\": \"asset\",\n                        \"comment\": \"example2\",\n                        \"id\": \"link1\"\n                    }\n                ],\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signType\": \"type1\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\n                        }\n                    }\n                ],\n                \"body\": {}\n            }\n        }\n    ]\n}"
						},
						{
							"name": "Error Retrieve an Asset",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{node1Url}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
									"host": [
										"{{node1Url}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset10",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:48:01 GMT"
								},
								{
									"key": "Content-Length",
									"value": "76"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"status\": \"invalid request\",\n    \"error\": \"asset does not exist\"\n}"
						}
					]
				},
				{
					"name": "Update Asset",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"standardVersion\": 1,\n    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n    \"createdAt\": \"2023-05-15T12:34:56Z\",\n    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n    \"notarizations\": [\n        {\n            \"notaryId\": \"not1\",\n            \"notaryMeta\": {}\n        },\n        {\n            \"notaryId\": \"not2\",\n            \"notaryMeta\": {}\n        }\n    ],\n    \"links\": [\n        {\n            \"assetUri\": \"string\",\n            \"type\": \"asset\",\n            \"comment\": \"example2\",\n            \"id\": \"id4\"\n        }\n    ],\n    \"signatures\": [\n        {\n            \"hashType\": \"SHA256\",\n            \"signType\": \"type1\",\n            \"signMeta\": {\n                \"authority\": \"user1\",\n                \"keyId\": \"12345\",\n                \"sign\": \"Xdjfgfn\"\n            }\n        }\n    ],\n    \"body\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Update Asset",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"standardVersion\": 1,\n    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n    \"createdAt\": \"2023-05-15T12:34:56Z\",\n    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n    \"notarizations\": [\n        {\n            \"notaryId\": \"not1\",\n            \"notaryMeta\": {}\n        },\n        {\n            \"notaryId\": \"not2\",\n            \"notaryMeta\": {}\n        }\n    ],\n    \"links\": [\n        {\n            \"assetUri\": \"string\",\n            \"type\": \"asset\",\n            \"comment\": \"example2\",\n            \"id\": \"id4\"\n        }\n    ],\n    \"signatures\": [\n        {\n            \"hashType\": \"SHA256\",\n            \"signType\": \"type1\",\n            \"signMeta\": {\n                \"authority\": \"user1\",\n                \"keyId\": \"12345\",\n                \"sign\": \"Xdjfgfn\"\n            }\n        }\n    ],\n    \"body\": {}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:48:30 GMT"
								},
								{
									"key": "Content-Length",
									"value": "55"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully updated asset\"\n}"
						}
					]
				},
				{
					"name": "Add link to an asset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"assetUri\": \"dbom://node1.test.com/nodes/node2.test.com/channels/channel1/assets/asset2\",\n  \"type\": \"DEPENDENT_ON\",\n  \"comment\": \"adding link\",\n  \"id\": \"link2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/links",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id",
								"links"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.example.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Add link to an asset",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"assetUri\": \"dbom://node1.test.com/nodes/node2.test.com/channels/channel1/assets/asset2\",\n  \"type\": \"DEPENDENT_ON\",\n  \"comment\": \"adding link\",\n  \"id\": \"link2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/links",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id",
										"links"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.example.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:50:27 GMT"
								},
								{
									"key": "Content-Length",
									"value": "54"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully linked asset\"\n}"
						}
					]
				},
				{
					"name": "Remove a link to another asset",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/links/:link_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id",
								"links",
								":link_id"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								},
								{
									"key": "link_id",
									"value": "link2",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Remove a link to another asset",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/links/:link_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id",
										"links",
										":link_id"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset1",
											"description": "(Required) "
										},
										{
											"key": "link_id",
											"value": "link2",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:51:02 GMT"
								},
								{
									"key": "Content-Length",
									"value": "56"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"status\": \"successfully unlinked asset\"\n}"
						}
					]
				},
				{
					"name": "Rich Query Assets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/_query?query={ }&fields=[]&limit=1&skip=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								"_query"
							],
							"query": [
								{
									"key": "query",
									"value": "{ }",
									"description": "(Required) Query"
								},
								{
									"key": "fields",
									"value": "[]",
									"description": "Fields to return"
								},
								{
									"key": "limit",
									"value": "1",
									"description": "Pagination limit"
								},
								{
									"key": "skip",
									"value": "0",
									"description": "Pagination skip"
								}
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								}
							]
						},
						"description": "Query Assets (with URL Params)"
					},
					"response": [
						{
							"name": "Rich Query Assets",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/_query?query={ }&fields=[]&limit=1&skip=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										"_query"
									],
									"query": [
										{
											"key": "query",
											"value": "{ }",
											"description": "(Required) Query"
										},
										{
											"key": "fields",
											"value": "[]",
											"description": "Fields to return"
										},
										{
											"key": "limit",
											"value": "1",
											"description": "Pagination limit"
										},
										{
											"key": "skip",
											"value": "0",
											"description": "Pagination skip"
										}
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 07:11:57 GMT"
								},
								{
									"key": "Content-Length",
									"value": "583"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"payload\": {\n                \"standardVersion\": 1,\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    },\n                    {\n                        \"notaryId\": \"not2\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"type\": \"asset\",\n                        \"comment\": \"example2\",\n                        \"id\": \"id4\"\n                    }\n                ],\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signType\": \"type1\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"Xdjfgfn\"\n                        }\n                    }\n                ],\n                \"body\": {}\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Query Assets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"where\": {\n        \"assetId\": {\n            \"equals\": \"asset1\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/_query",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								"_query"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.test.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								}
							]
						},
						"description": "Query Assets (with POST Body)"
					},
					"response": [
						{
							"name": "Query Assets",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"where\": {\n        \"assetId\": {\n            \"equals\": \"asset1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/_query",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										"_query"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.test.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:51:50 GMT"
								},
								{
									"key": "Content-Length",
									"value": "583"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"payload\": {\n                \"standardVersion\": 1,\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    },\n                    {\n                        \"notaryId\": \"not2\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"type\": \"asset\",\n                        \"comment\": \"example2\",\n                        \"id\": \"id4\"\n                    }\n                ],\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signType\": \"type1\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"Xdjfgfn\"\n                        }\n                    }\n                ],\n                \"body\": {}\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Asset Audit trail",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/audit-trail",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id",
								"audit-trail"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1.example.com",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								}
							]
						},
						"description": "Get an asset"
					},
					"response": [
						{
							"name": "Asset Audit trail",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/audit-trail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id",
										"audit-trail"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "node1.example.com",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "asset1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Thu, 07 Sep 2023 06:52:01 GMT"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"result\": [\n        {\n            \"id\": \"64f96a48e08e507c692dec34\",\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"action\": \"CREATE\",\n            \"payload\": {\n                \"assetId\": \"asset1\",\n                \"channelId\": \"channel1\",\n                \"createdAt\": \"2023-09-07T06:14:32.800Z\",\n                \"id\": \"64f96a48e08e507c692dec33\",\n                \"modifiedAt\": \"2023-09-07T06:14:32.800Z\",\n                \"payload\": {\n                    \"body\": {},\n                    \"createdAt\": \"2023-05-15T12:34:56Z\",\n                    \"links\": [\n                        {\n                            \"assetUri\": \"string\",\n                            \"comment\": \"example2\",\n                            \"id\": \"link1\",\n                            \"type\": \"asset\"\n                        }\n                    ],\n                    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                    \"notarizations\": [\n                        {\n                            \"notaryId\": \"not1\",\n                            \"notaryMeta\": {}\n                        }\n                    ],\n                    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                    \"signatures\": [\n                        {\n                            \"hashType\": \"SHA256\",\n                            \"signMeta\": {\n                                \"authority\": \"user1\",\n                                \"keyId\": \"12345\",\n                                \"sign\": \"asdfbiuvagebvbayerfasdfbsjasdfdliufgalsi\"\n                            },\n                            \"signType\": \"type1\"\n                        }\n                    ],\n                    \"standardVersion\": 1\n                }\n            },\n            \"timestamp\": \"2023-09-07T06:14:32.809Z\"\n        },\n        {\n            \"id\": \"64f9723e379ca43675f1526e\",\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"action\": \"UPDATE\",\n            \"payload\": {\n                \"body\": {},\n                \"createdAt\": \"2023-05-15T12:34:56Z\",\n                \"links\": [\n                    {\n                        \"assetUri\": \"string\",\n                        \"comment\": \"example2\",\n                        \"id\": \"id4\",\n                        \"type\": \"asset\"\n                    }\n                ],\n                \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                \"notarizations\": [\n                    {\n                        \"notaryId\": \"not1\",\n                        \"notaryMeta\": {}\n                    },\n                    {\n                        \"notaryId\": \"not2\",\n                        \"notaryMeta\": {}\n                    }\n                ],\n                \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                \"signatures\": [\n                    {\n                        \"hashType\": \"SHA256\",\n                        \"signMeta\": {\n                            \"authority\": \"user1\",\n                            \"keyId\": \"12345\",\n                            \"sign\": \"Xdjfgfn\"\n                        },\n                        \"signType\": \"type1\"\n                    }\n                ],\n                \"standardVersion\": 1\n            },\n            \"timestamp\": \"2023-09-07T06:48:30.695Z\"\n        },\n        {\n            \"id\": \"64f972b3379ca43675f1526f\",\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"action\": \"LINK\",\n            \"payload\": {\n                \"assetId\": \"asset1\",\n                \"channelId\": \"channel1\",\n                \"createdAt\": \"2023-09-07T06:14:32.800Z\",\n                \"id\": \"64f96a48e08e507c692dec33\",\n                \"modifiedAt\": \"2023-09-07T06:50:27.688Z\",\n                \"payload\": {\n                    \"body\": {},\n                    \"createdAt\": \"2023-05-15T12:34:56Z\",\n                    \"links\": [\n                        {\n                            \"assetUri\": \"string\",\n                            \"comment\": \"example2\",\n                            \"id\": \"id4\",\n                            \"type\": \"asset\"\n                        },\n                        {\n                            \"assetUri\": \"dbom://node1.test.com/nodes/node2.test.com/channels/channel1/assets/asset2\",\n                            \"comment\": \"adding link\",\n                            \"id\": \"link2\",\n                            \"type\": \"DEPENDENT_ON\"\n                        }\n                    ],\n                    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                    \"notarizations\": [\n                        {\n                            \"notaryId\": \"not1\",\n                            \"notaryMeta\": {}\n                        },\n                        {\n                            \"notaryId\": \"not2\",\n                            \"notaryMeta\": {}\n                        }\n                    ],\n                    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                    \"signatures\": [\n                        {\n                            \"hashType\": \"SHA256\",\n                            \"signMeta\": {\n                                \"authority\": \"user1\",\n                                \"keyId\": \"12345\",\n                                \"sign\": \"Xdjfgfn\"\n                            },\n                            \"signType\": \"type1\"\n                        }\n                    ],\n                    \"standardVersion\": 1\n                }\n            },\n            \"timestamp\": \"2023-09-07T06:50:27.699Z\"\n        },\n        {\n            \"id\": \"64f972d6379ca43675f15270\",\n            \"channelId\": \"channel1\",\n            \"assetId\": \"asset1\",\n            \"action\": \"UNLINK\",\n            \"payload\": {\n                \"assetId\": \"asset1\",\n                \"channelId\": \"channel1\",\n                \"createdAt\": \"2023-09-07T06:14:32.800Z\",\n                \"id\": \"64f96a48e08e507c692dec33\",\n                \"modifiedAt\": \"2023-09-07T06:51:02.087Z\",\n                \"payload\": {\n                    \"body\": {},\n                    \"createdAt\": \"2023-05-15T12:34:56Z\",\n                    \"links\": [\n                        {\n                            \"assetUri\": \"string\",\n                            \"comment\": \"example2\",\n                            \"id\": \"id4\",\n                            \"type\": \"asset\"\n                        }\n                    ],\n                    \"modifiedAt\": \"2023-05-15T12:34:56Z\",\n                    \"notarizations\": [\n                        {\n                            \"notaryId\": \"not1\",\n                            \"notaryMeta\": {}\n                        },\n                        {\n                            \"notaryId\": \"not2\",\n                            \"notaryMeta\": {}\n                        }\n                    ],\n                    \"schemaUrl\": \"https://raw.githubusercontent.com/spdx/spdx-spec/development/v2.3.1/schemas/spdx-schema.json\",\n                    \"signatures\": [\n                        {\n                            \"hashType\": \"SHA256\",\n                            \"signMeta\": {\n                                \"authority\": \"user1\",\n                                \"keyId\": \"12345\",\n                                \"sign\": \"Xdjfgfn\"\n                            },\n                            \"signType\": \"type1\"\n                        }\n                    ],\n                    \"standardVersion\": 1\n                }\n            },\n            \"timestamp\": \"2023-09-07T06:51:02.095Z\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Validate notarization and signature on asset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"channels",
								":channel_id",
								"assets",
								":asset_id",
								"validate"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "node1",
									"description": "(Required) "
								},
								{
									"key": "channel_id",
									"value": "channel1",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "asset1",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validate notarization and signature on asset Copy",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/nodes/:node_uri/channels/:channel_id/assets/:asset_id/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"nodes",
										":node_uri",
										"channels",
										":channel_id",
										"assets",
										":asset_id",
										"validate"
									],
									"variable": [
										{
											"key": "node_uri",
											"value": "Node1",
											"description": "(Required) "
										},
										{
											"key": "channel_id",
											"value": "Channel1",
											"description": "(Required) "
										},
										{
											"key": "asset_id",
											"value": "Asset1",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Implemented",
							"code": 501,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sat, 17 Jun 2023 19:48:07 GMT"
								},
								{
									"key": "Content-Length",
									"value": "76"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": false,\n    \"status\": \"Unimplemented Method\",\n    \"error\": \"not implemented\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Federation",
			"item": [
				{
					"name": "Hidden Requests",
					"item": [
						{
							"name": "Create request (between nodes)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nodeUri\": \"node2.test.com\",\r\n    \"nodeId\": \"node2\",\r\n    \"channelId\": \"channel1\",\r\n    \"type\": \"INITIATE_REQUEST\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{node1FedUrl}}/federation/requests",
									"host": [
										"{{node1FedUrl}}"
									],
									"path": [
										"federation",
										"requests"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "List all requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{node2Url}}/federation/requests/all",
							"host": [
								"{{node2Url}}"
							],
							"path": [
								"federation",
								"requests",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "List one request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{node2Url}}/federation/requests/:request_id",
							"host": [
								"{{node2Url}}"
							],
							"path": [
								"federation",
								"requests",
								":request_id"
							],
							"variable": [
								{
									"key": "request_id",
									"value": "64e79e943d525ffe84b60d54"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Accept request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"ACCEPT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node2Url}}/federation/requests/:request_id/accept",
							"host": [
								"{{node2Url}}"
							],
							"path": [
								"federation",
								"requests",
								":request_id",
								"accept"
							],
							"variable": [
								{
									"key": "request_id",
									"value": "64e79e943d525ffe84b60d54"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reject request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"type\": \"REJECT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node2Url}}/federation/requests/:request_id/reject",
							"host": [
								"{{node2Url}}"
							],
							"path": [
								"federation",
								"requests",
								":request_id",
								"reject"
							],
							"variable": [
								{
									"key": "request_id",
									"value": "64ddf8eba4acb883b830ad7d"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke request",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nodeUri\": \"node2.test.com\",\r\n    \"nodeId\": \"node2\",\r\n    \"channelId\": \"channel2\",\r\n    \"type\": \"REVOKE\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{node1Url}}/federation/revoke",
							"host": [
								"{{node1Url}}"
							],
							"path": [
								"federation",
								"revoke"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notary",
			"item": [
				{
					"name": "List locally configured notaries",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nodes/:node_uri/notaries",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nodes",
								":node_uri",
								"notaries"
							],
							"variable": [
								{
									"key": "node_uri",
									"value": "_local"
								}
							]
						},
						"description": "List all notaries that are configured locally"
					},
					"response": []
				}
			]
		},
		{
			"name": "Check User and Client API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3050",
					"host": [
						"localhost"
					],
					"port": "3050"
				}
			},
			"response": [
				{
					"name": "Check",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3050",
							"host": [
								"localhost"
							],
							"port": "3050"
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 17 Jun 2023 19:48:24 GMT"
						},
						{
							"key": "Content-Length",
							"value": "63"
						},
						{
							"key": "Content-Type",
							"value": "text/plain; charset=utf-8"
						}
					],
					"cookie": [],
					"body": "Chainsource Gateway User and Client APIs - v2. runtime:go1.19.2"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3050/api/v2",
			"type": "string"
		},
		{
			"key": "baseFedUrl",
			"value": "https://localhost:7205/api/v2",
			"type": "default"
		},
		{
			"key": "node1Url",
			"value": "http://localhost:3050/api/v2",
			"type": "default"
		},
		{
			"key": "node2Url",
			"value": "http://localhost:3051/api/v2",
			"type": "default"
		},
		{
			"key": "node1FedUrl",
			"value": "https://localhost:7205/api/v2",
			"type": "default"
		},
		{
			"key": "node2FedUrl",
			"value": "https://localhost:7206/api/v2",
			"type": "default"
		}
	]
}