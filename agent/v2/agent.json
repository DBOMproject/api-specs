{
   "swagger": "2.0",
   "info": {
      "version": "1.0",
      "title": "DBoM Agent",
      "description": "The HTTP REST API for the Distributed Bill of Materials Agent",
      "contact": {
         "name": "Ryan",
         "email": "Ryan.Mathison2@unisys.com"
      }
   },
   "host": "localhost:3000",
   "basePath": "/",
   "schemes": [
      "http"
   ],
   "consumes": [
      "application/json"
   ],
   "produces": [
      "application/json"
   ],
   "paths": {
      "/channels": {
         "parameters": [],
         "get": {
            "summary": "List Channels",
            "tags": [
               "Record"
            ],
            "operationId": "ListRecords",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Array of channel ids retrieved successfully"
               },
               "404": {
                  "description": "No channels found",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         }
      },
      "/channels/{channelID}/records": {
         "parameters": [
            {
               "name": "channelID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Channel ID"
            }
         ],
         "get": {
            "summary": "List Records",
            "tags": [
               "Record"
            ],
            "operationId": "ListRecordsPost",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Array of record ids retrieved successfully"
               },
               "404": {
                  "description": "No records found",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         },
         "post": {
            "summary": "Commit a Record",
            "tags": [
               "Record"
            ],
            "parameters": [
               {
                  "name": "commit-type",
                  "in": "header",
                  "required": true,
                  "type": "string",
                  "description": "Commit Type"
               },
               {
                  "name": "Body",
                  "in": "body",
                  "required": true,
                  "description": "",
                  "schema": {
                     "$ref": "#/definitions/RecordDefinition"
                  }
               }
            ],
            "operationId": "CommitRecord",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Record has been created successfully",
                  "schema": {
                     "$ref": "#/definitions/CreateRecordResponseDefinition"
                  }
               },
               "404": {
                  "description": "Channel does not exist",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "409": {
                  "description": "Record already exists",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         }
      },
      "/channels/{channelID}/records/_query": {
         "parameters": [
            {
               "name": "channelID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Channel ID"
            }
         ],
         "get": {
            "summary": "Query Records",
            "tags": [
               "Record"
            ],
            "parameters": [
               {
                  "name": "query",
                  "in": "query",
                  "required": true,
                  "type": "string",
                  "description": "Query"
               },
               {
                  "name": "fields",
                  "in": "query",
                  "required": false,
                  "type": "string",
                  "description": "Fields to return"
               },
               {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "Pagination limit"
               },
               {
                  "name": "skip",
                  "in": "query",
                  "required": false,
                  "type": "integer",
                  "description": "Pagination skip"
               }
            ],
            "operationId": "QueryRecords",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Records have been retrieved successfully"
               },
               "404": {
                  "description": "Channel does not exist",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         },
         "post": {
            "summary": "Query Records",
            "tags": [
               "Record"
            ],
            "parameters": [
               {
                  "name": "Body",
                  "in": "body",
                  "required": true,
                  "description": "",
                  "schema": {
                     "$ref": "#/definitions/QueryRecordDefinition"
                  }
               }
            ],
            "operationId": "QueryRecordsPost",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Records have been retrieved successfully"
               },
               "404": {
                  "description": "Channel does not exist",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         }
      },
      "/channels/{channelID}/records/{recordID}": {
         "parameters": [
            {
               "name": "recordID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Record ID"
            },
            {
               "name": "channelID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Channel ID"
            }
         ],
         "get": {
            "summary": "Query a Record",
            "tags": [
               "Record"
            ],
            "operationId": "RetrieveRecord",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Record has been retrieved and is in the body",
                  "schema": {
                     "$ref": "#/definitions/ExampleRecordPayloadDefinition"
                  }
               },
               "404": {
                  "description": "Channel and/or record does not exist",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         }
      },
      "/channels/{channelID}/records/{recordID}/audit": {
         "parameters": [
            {
               "name": "recordID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Record ID"
            },
            {
               "name": "channelID",
               "in": "path",
               "required": true,
               "type": "string",
               "description": "Channel ID"
            }
         ],
         "get": {
            "summary": "Audit an record",
            "tags": [
               "Record"
            ],
            "operationId": "AuditRecord",
            "deprecated": false,
            "produces": [
               "application/json"
            ],
            "responses": {
               "200": {
                  "description": "Record Audit Trail has been retrieved and is in the body",
                  "schema": {
                     "$ref": "#/definitions/AuditResponseDefinition"
                  }
               },
               "404": {
                  "description": "Channel and/or record does not exist",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "500": {
                  "description": "Error on agent",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               },
               "502": {
                  "description": "Error in repository",
                  "schema": {
                     "$ref": "#/definitions/ErrorResponseDefinition"
                  }
               }
            }
         }
      }
   },
   "definitions": {
      "RecordDefinition": {
         "title": "RecordDefinition",
         "example": {
            "recordID": "exampleRecord",
            "recordIDPayload": {
               "example": "example"
            }
         },
         "type": "object",
         "properties": {
            "recordID": {
               "type": "string"
            },
            "recordIDPayload": {
               "type": "object"
            }
         },
         "required": [
            "recordID",
            "recordIDPayload"
         ]
      },
      "QueryRecordDefinition": {
         "title": "QueryRecordDefinition",
         "example": {
            "query": {
               "$and": [
                  {
                     "assetType": {
                        "$eq": "HardwareComponent"
                     }
                  },
                  {
                     "assetSubType": {
                        "$eq": "CPUUnit"
                     }
                  }
               ]
            },
            "fields": [
               "documentCreator",
               "documentCreatedDate",
               "documentName",
               "assetManufacturer",
               "assetMetadata",
               "manufactureSignature"
            ],
            "limit": 20,
            "skip": 0
         },
         "type": "object",
         "properties": {
            "query": {
               "type": "object"
            },
            "fields": {
               "type": "array",
               "items": {
                  "type": "string"
               }
            },
            "limit": {
               "type": "integer"
            },
            "skip": {
               "type": "integer"
            }
         },
         "required": [
            "query"
         ]
      },
      "CreateRecordResponseDefinition": {
         "title": "CreateRecordResponseDefinition",
         "example": {
            "success": true
         },
         "type": "object",
         "properties": {
            "success": {
               "type": "boolean"
            }
         },
         "required": [
            "success"
         ]
      },
      "ErrorResponseDefinition": {
         "title": "ErrorResponseDefinition",
         "example": {
            "success": false,
            "status": "No resource found",
            "error": "Channel query failed"
         },
         "type": "object",
         "properties": {
            "success": {
               "type": "boolean"
            },
            "status": {
               "type": "string"
            },
            "error": {
               "type": "string"
            }
         },
         "required": [
            "success",
            "status"
         ]
      },
      "ExampleRecordPayloadDefinition": {
         "title": "ExampleRecordPayloadDefinition",
         "example": {
            "example": "example"
         }
      },
      "AuditResponseDefinition": {
         "title": "AuditResponseDefinition",
         "example": {
            "history": [
               {
                  "_id": 3412,
                  "timestamp": "2020-9-01T21:04:14.840Z",
                  "payload": {
                     "example": "example"
                  },
                  "resourceID": "exampleRecord",
                  "eventType": "CREATE",
                  "channelID": "exampleChannel"
               },
               {
                  "_id": 3474,
                  "timestamp": "2020-10-02T11:54:35.345Z",
                  "payload": {
                     "example": "exampleUpdated"
                  },
                  "resourceID": "exampleRecord",
                  "eventType": "UPDATE",
                  "channelID": "exampleChannel"
               }
            ]
         },
         "type": "object",
         "properties": {
            "history": {
               "type": "array",
               "items": {
                  "$ref": "#/definitions/AuditDefinition"
               }
            }
         },
         "required": [
            "history"
         ]
      },
      "AuditDefinition": {
         "title": "AuditDefinition",
         "example": {
            "_id": 3412,
            "timestamp": "2020-10-01T21:04:14.840Z",
            "payload": {
               "example": "example"
            },
            "resourceID": "exampleRecord",
            "eventType": "CREATE",
            "channelID": "exampleChannel"
         },
         "type": "object",
         "properties": {
            "_id": {
               "type": "integer",
               "format": "int64"
            },
            "timestamp": {
               "type": "string",
               "format": "date-time"
            },
            "payload": {
               "type": "object"
            },
            "resourceID": {
               "type": "string"
            },
            "eventType": {
               "type": "string"
            },
            "channelID": {
               "type": "string"
            }
         },
         "required": [
            "_id",
            "timestamp",
            "payload",
            "resourceID",
            "eventType",
            "channelID"
         ]
      }
   },
   "tags": [
      {
         "name": "Record",
         "description": ""
      }
   ]
}